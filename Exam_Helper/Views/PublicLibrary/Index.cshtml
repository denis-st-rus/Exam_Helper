@model Exam_Helper.ViewsModel.ClassForUserLibrary
@inject SignInManager<User> _signInManager;
@{
    ViewData["Title"] = "Public Library";
}

<main class="container">
    <div class="container">

        <div id="modDialog" class="modal fade">
            <div id="dialogContent" class="modal-dialog"></div>
        </div>

        <div class="justify-content text-center h1">
            <span>Библиотека</span>
        </div>

        <hr color="brown" />

        <div class="container d-flex bd-highlight pt-3" style="padding-bottom:1rem;">
            <button class="btn btn-primary" type="button" id="button_Que" data-toggle="collapse" data-target="#collapseAllQuestion" aria-expanded="true" aria-controls="collapseAllQuestion">
                Вопросы
            </button>
            <button class="btn btn-primary ml-1" type="button" id="button_Pack" data-toggle="collapse" data-target="#collapseAllPacks" aria-expanded="true" aria-controls="collapseAllPacks">
                Паки
            </button>
        </div>
        <div class="form-group pb-3 bd-highlight ml-auto p-2">
            <form asp-action="Index">
                <input type="text" name="SearchString" class="form-control" placeholder="Поиск.." id="Search">
            </form>
        </div>
        <div class="collapse show" id="collapseAllQuestion">
            @foreach (var item in Model.questions.Where(x=>x.question.IsPrivate==false && x.IsSearched).Select(x=>x.question))
            {
                <div class="accordion" id="accordionExample" data-fordisabling="dq@(item.Id)">
                    <div class="card border border-info mt-2 shadow mb-5 bg-white rounded">
                        <div class="card-header bg-white d-flex justify-content-between" id="headingOne">
                            <button class="btn titleText" type="button" data-toggle="collapse" data-target="#q_collapse_@item.Id.ToString()" aria-expanded="false" aria-controls="q_collapse_@item.Id.ToString()">
                                <span class="h4" id="qTitle">@item.Title </span>
                            </button>
                            <div class="btn-group  w-25 ml-3 actionButton">
                                <button type="button" class="btn collapse btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="q_collapse_@item.Id.ToString()" data-parent="#accordionExample">
                                    Действия
                                </button>
                                <div class="dropdown-menu actionDrop">
                                    <a class="dropdown-item" asp-action="QRedirectToTest" asp-route-id="@item.Id">Тестирование</a>
                                    <a class="dropdown-item compItem" asp-action="QDetails" asp-route-id="@item.Id">Подробности</a>
                                    @{
                                        if (_signInManager.IsSignedIn(User))
                                        {
                                            <a class="dropdown-item" id="@("q" + item.Id.ToString())" onclick="AddQuestion(this.id)" style="cursor: pointer;">Добавить</a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div id="q_collapse_@item.Id.ToString()" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                            <div class="card-body  d-flex flex-column">
                                @foreach (var t in item.TagIds.Split(';'))
                                {
                                    if (!string.IsNullOrEmpty(t))
                                    {
                                        <div class="alert alert-info text-center tags mt-3">
                                            <span class="titleText" id="qTags">@Html.DisplayFor(modelItem => modelItem.tags.Find(x => x.Id == int.Parse(t)).Title) </span>
                                        </div>
                                    }
                                }
                                <span class="h5 mt-2 mb-3" style="white-space: pre-wrap; margin-bottom: 0rem!important;" id="qDefinition">@item.Definition</span>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>

        <div class="collapse" id="collapseAllPacks">
            @foreach (var item in Model.packs)
            {
                <div class="accordion" id="accordionExample" data-fordisabling="dp@(item.Id)">
                    <div class="card border border-info mt-2 shadow mb-5 bg-white rounded">
                        <div class="card-header bg-white d-flex justify-content-between" id="headingOne">
                            <button class="btn" type="button" data-toggle="collapse" data-target="#p_collapse_@item.Id.ToString()" aria-expanded="false" aria-controls="p_collapse_@item.Id.ToString()">
                                <span class="h4 titleText" id="pName"> @Html.DisplayFor(modelItem => item.Name) </span>
                            </button>
                            <div class="btn-group  w-25">
                                <button type="button" class="btn collapse btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="p_collapse_@item.Id.ToString()" data-parent="#accordionExample">
                                    Действия
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item"  asp-controller="Home" asp-action="PackTests">Тестирование</a>
                                    <a class="dropdown-item compItem" asp-action="PDetails" asp-route-id="@item.Id">Подробности</a>
                                    @{
                                        if (_signInManager.IsSignedIn(User))
                                        {
                                            <a class="dropdown-item" id="@("p" + item.Id.ToString())" onclick="AddPack(this.id)" style="cursor: pointer;">Добавить</a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div id="p_collapse_@item.Id.ToString()" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                            <div class="card-body  d-flex flex-column">
                                @foreach (var t in item.TagsId.Split(';'))
                                {
                                    if (!string.IsNullOrEmpty(t))
                                    {
                                        <div class="alert alert-info w-25 text-center">
                                            <span id="pTags">@Html.DisplayFor(modelItem => modelItem.tags.Find(x => x.Id == int.Parse(t)).Title) </span>
                                        </div>
                                    }
                                }
                                @foreach (var quesId in item.QuestionSet.Split(";"))
                                {
                                    <div class="d-flex justify-content-between pt-3 pb-3">
                                        <span id="pqList">@Html.DisplayFor(model => model.questions.FirstOrDefault(x => x.question.Id.ToString() == quesId).question.Title)</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</main>

<script>

    $(document).ready(function () {
        $("#Search").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("div[data-fordisabling*='dq']").filter(function () {
                $(this).toggle(
                    $(this).find("span#qTitle").text().toLowerCase().indexOf(value) > -1 ||
                    $(this).find("span#qTags").text().toLowerCase().indexOf(value) > -1 ||
                    $(this).find("span#qDefinition").text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(document).ready(function () {
        $("#Search").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("div[data-fordisabling*='dp']").filter(function () {
                $(this).toggle(
                    $(this).find("span#pName").text().toLowerCase().indexOf(value) > -1 ||
                    $(this).find("span#pTags").text().toLowerCase().indexOf(value) > -1 ||
                    $(this).find("span#pqList").text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
    
        $(function () {
            $.ajaxSetup({ cache: false });
            $(".compItem").click(function (e) {

                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        });

    $("#button_Que").click(function () {
        $('#collapseAllPacks').removeClass('show')
    });
    $("#button_Pack").click(function () {
        $('#collapseAllQuestion').removeClass('show')
    });

    function AddQuestion(id) {
        var a = document.getElementById(id);

        if (a.innerHTML != "Добавить") {
            //alert("Error:223");
            return false; 
        }
         a.innerHTML = "Пожалуйста, подождите, идёт процесс добавления...";
        $.ajax(
            {
                type: "Post",
                data: { ques_id: id },
                url: '@Url.Action("AddQuestionToMyLib", "PublicLibrary")',
                success: function (msg) {
                          a.innerHTML = "Добавлено!";
                      },
                error: function (msg) {
                    alert("Error:224");
                      }
                  })

        return false;
    };

    function AddPack(id) {

        var a = document.getElementById(id);

        //if (a.innerHTML != "Добавить") {
        //    //alert("Error:225");
        //    return false;
        //}

             a.innerHTML = "Пожалуйста, подождите, идёт процесс добавления...";
             $.ajax(
                 {
                     type: "POST",
                     data: { pack_id: id },
                     url: '@Url.Action("AddPackToMyLib", "PublicLibrary")',
                     success: function (msg) {
                         a.innerHTML = "Добавлено!";
                     },
                     error: function (msg) {
                         alert("Error:226");
                     }
                 })



             return false;
    };


    $(document).ready(function () {
        if (screen.width < 768) {
            $(document).ready(function () {
                $('.card-header').addClass('flex-column')
                $('.card-header').addClass('mt-2')
            });
        }
    });


</script>
