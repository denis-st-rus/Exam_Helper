@model Exam_Helper.ViewsModel.TestInfoMissedWords;
@{
    ViewData["Title"] = "View";
}

<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</head>



<p>
    @if (Model.IsSuccessed)
    {

        @foreach (var word in Model.Teorem)
        {
            if (word[0] == ' ')
            {
                <input size="5" class="test" />
            }
            else
            {
                @(word +" ");
            }
        }
        <div class="form-group">
            <input type="submit" value="Check answers" class="btn btn-primary" id="CheckAnswers" />
        </div>
    }
    else
    {
<p>Мы не можем создать данный тест для этого вопроса.</p>
    }
    <a asp-controller="PublicLibrary" asp-action="Index">
        <input type="button" value="Back to the library" class="btn btn-primary" />
    </a>
</p>

<script>

       $("#CheckAnswers").click(function CheckAnswers() {
        var ans = [];
        @for(int i = 0; i< Model.Answers.Length; i++)
        {
            @:ans.push("@(new Microsoft.AspNetCore.Html.HtmlString(Model.Answers[i]))");
        }
        $("input.test").each(function (index) {
            console.log($(this).val(), " ", ans[index]);
            if ($(this).val() === ans[index]) {
                $(this).removeClass("wrong");
                $(this).addClass("right");
            }
            else {
                $(this).removeClass("right");
                $(this).addClass("wrong");
            }
        });
       });

</script>

<style>

    .right {
        background-color: green;
    }

    .wrong {
        background-color: red;
    }
</style>


@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}